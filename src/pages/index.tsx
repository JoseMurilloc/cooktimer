import { useEffect } from 'react'

import { CardTimer } from 'components/CardTimer'
import Header from 'components/Header'
import { useCookTimer } from 'hooks/useCookTimer'
import { useTimeOut } from 'hooks/useTimeOut'
import Head from 'next/head'

import * as S from '../styles/pages/home'

export default function Home () {
  const { getAllCookTimers, hasTimerTurnOff } = useCookTimer()
  const { startVerifyTurnOff, stopVerifyTurnOff } = useTimeOut()
  const timers = getAllCookTimers()

  useEffect(() => {
    window.onbeforeunload = () => {
      return true
    }
  }, [])

  useEffect(() => {
    console.log(hasTimerTurnOff())

    if (!hasTimerTurnOff()) {
      stopVerifyTurnOff()
      return
    }

    startVerifyTurnOff()

    return () => {
      stopVerifyTurnOff()
    }
  }, [hasTimerTurnOff])

  const getCurrentType = (timer: number) => {
    if (!timer) {
      return 'finalMinutes'
    }

    return 'edit'
  }

  return (
    <S.Container>
      <Head>
        <title>Cooker timer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <S.Main>
        <section>
          <h1>Vamos começar a cozinhar?</h1>
          <p>Crie seu primeiro temporizador e defina seus horários.</p>
        </section>
        <section className="cardsGrid">
          <CardTimer type="add"/>
          {timers.map(timer => (
            <CardTimer
              key={timer.uuid}
              timer={timer}
              type={getCurrentType(timer.timer)}
            />
          ))}
        </section>
      </S.Main>
    </S.Container>
  )
}
